from mage_ai.settings.repo import get_repo_path
from mage_ai.io.config import ConfigFileLoader
from mage_ai.io.google_cloud_storage import GoogleCloudStorage
from pandas import DataFrame
from os import path
import requests
import io
import pyarrow as pa
import pyarrow.parquet as pq

if 'data_exporter' not in globals():
    from mage_ai.data_preparation.decorators import data_exporter


@data_exporter
def export_data_to_google_cloud_storage(**kwargs) -> None:

    config_path = path.join(get_repo_path(), 'io_config.yaml')
    config_profile = 'default'

    bucket_name = 'warehouse-zoomcamp-barbara-atkins'
    base_object_key = 'green_taxi_2022'
    extension =  ".parquet"
    year = "2022"
    months = ["01","02","03","04","05","06","07","08","09","10","11", "12"]
    base_file_url = "https://d37ci6vzurychx.cloudfront.net/trip-data/green_tripdata_"

 # https://d37ci6vzurychx.cloudfront.net/trip-data/green_tripdata_2022-01.parquet

    for month in months:
        taxi_data_url_by_month = base_file_url + year + "-" + month + extension
        object_key = base_object_key + "_" + month + extension
        response = requests.get(taxi_data_url_by_month)
        data = io.BytesIO(response.content)
        df = pq.read_table(data).to_pandas()

        df['VendorID'] = pd.to_numeric(d1['VendorID'])
        d1['passenger_count']       = pd.to_numeric(d1['passenger_count'])
        d1['trip_distance']         = pd.to_numeric(d1['trip_distance'])
        d1['RatecodeID']            = pd.to_numeric(d1['RatecodeID'])
        d1['store_and_fwd_flag']    = d1['store_and_fwd_flag'].astype(str)
        d1['PULocationID']          = pd.to_numeric(d1['PULocationID'])
        d1['DOLocationID']          = pd.to_numeric(d1['DOLocationID'])
        d1['payment_type']          = pd.to_numeric(d1['payment_type'])
        d1['fare_amount']           = pd.to_numeric(d1['fare_amount'])
        d1['extra']                 = pd.to_numeric(d1['extra'])
        d1['mta_tax']               = pd.to_numeric(d1['mta_tax'])
        d1['tip_amount']            = pd.to_numeric(d1['tip_amount'])
        d1['tolls_amount']          = pd.to_numeric(d1['tolls_amount'])
        d1['improvement_surcharge'] = pd.to_numeric(d1['improvement_surcharge'])
        d1['total_amount']          = pd.to_numeric(d1['total_amount'])
        d1['congestion_surcharge']  = pd.to_numeric(d1['congestion_surcharge'])
                d1["ehail_fee"]             = pd.to_numeric(d1["ehail_fee"])

        GoogleCloudStorage.with_config(
            ConfigFileLoader(
                config_path,
                config_profile
                )
            ).export(
                df,
                bucket_name,
                object_key
            )
